共享锁与互斥锁(排它锁)

一个箱子一把锁，锁不能共存，任何时刻最多只存在一把锁

共享锁能被多人持有，互斥锁只能被一人持有

(1) 文件
flock()函数
boolean flock()
默认自旋，
LOCK_SH: 共享锁，share
LOCK_EX: 互斥锁，exclusion
LOCK_UN: 不再持有锁，对于LOCK_EX，不持有锁即解锁，对于LOCK_SH，不持有锁并不意味着资源被解锁，只有当所有人不持有锁时，才会解锁
LOCK_NB: not block，不阻塞，即不自旋，LOCK_SH和LOCK_EX默认自旋


在未加锁的情况下，一般不要多个进程同时写同一个文件，每个进程一个文件指针，不同进程的文件指针是独立的，一个进程写入的数据，可能会覆盖另一个文件写入的数据。
例如，A进程的文件指针已经指向了eof，正准备要往文件中写入一批数据，此时B进程也恰好往同一文件写入了一批数据(在A进程写入之前完成写入)，待A进程写完数据后，之前B进程写入的数据，
就要被覆盖一部分或全部覆盖

a或a+模式打开的文件除外